<div class="files-index">
  <div class="jumbotron">
    <h1>文件列表</h1>
    <p></p>
  </div>

  <div id='file_names' class="files-index-file-names">

    <!--搜索-->
    <div class="files-index-file-names-search-space" >
      <%= render 'search_1'%>
    </div>
    <template v-if="file_names.length === 0">
      <%= render 'shared/cat_file/no_result'%>
    </template>
    <template v-else>
      <%= render 'list'%>
    </template>

  </div>
<div>

<script>

  var vm = new Vue({
    el: '#file_names',
    data:{
      search_key: '',
      detail_id: '',
      file_names: [], 
      file_lables: [],
      search_lable: '',
      select: '',
      restaurants: [],
    },  
    computed: {
      replace_file_name: function(name){
        alert(name);

      }
    },
    methods: {
      querySearch(queryString, cb) {
        var restaurants = this.restaurants;
        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;
        // 调用 callback 返回建议列表的数据
        cb(results);
      },
      createFilter(queryString) {
        return (restaurant) => {
          return (restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);
        };
      },
      /* 搜索框点击时间触发函数 */
      handleSelect(item) {
        window.location.href="/cat_file/files/file_detail/?file_name="+item
      }
    },
    mounted() {

      /* 获取列表数据 */
      axios.get('/cat_file/files/files_list')
        .then(function (response) {
          vm.file_names=response.data.file_names;
          vm.file_lables=response.data.file_lables; 
        })
        .catch(function (error) {
          alert(error);
        });
        
      /* 获取搜索框数据 */
      axios.get('/cat_file/files/get_file_names')
        .then(function (response) {
          vm.restaurants=response.data;
        })
        .catch(function (error) {
          alert(error);
        });
      
    }

  })



</script>